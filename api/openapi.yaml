openapi: 3.0.0
info:
  title: タスク管理API
  version: 1.0.0
  description: タスク管理システムのAPI仕様書

servers:
  - url: http://localhost:3000/api/v1
    description: ローカル環境
  - url: https://api.task-manager.com/api/v1
    description: 本番環境

tags:
  # - name: 認証
  #   description: ユーザー認証関連のエンドポイント
  - name: タスク
    description: タスクの基本操作（作成、取得、更新、削除）
  - name: カテゴリ
    description: カテゴリの管理（作成、取得、更新、削除）
  # - name: 繰り返しタスク
  #   description: 繰り返しタスクの管理
  # - name: マイルストーン
  #   description: マイルストーンの管理
  # - name: 習慣化
  #   description: 習慣化状況の管理
  # - name: ユーザー管理
  #   description: ユーザー管理（管理者用）

components:
  securitySchemes:
    # Auth0を使ったOAuth2認証を定義
    Auth0:
      type: oauth2
      description: Auth0によるOAuth2認証
      flows:
        implicit:
          authorizationUrl: https://dev-x7dol3ce1bkdedsn.jp.auth0.com/authorize?audience=https://Routinify-auth-api.com
          tokenUrl: https://dev-x7dol3ce1bkdedsn.jp.auth0.com/oauth/token
          scopes:
            read:tasks: タスクの読み取り
            write:tasks: タスクの作成・更新
            delete:tasks: タスクの削除

  responses:
    Unauthorized:
      description: 認証エラー
      content:
        application/json:
          schema:
            oneOf:
              - type: object
                properties:
                  message:
                    type: string
                    example: "Requires authentication"
              - type: object
                properties:
                  message:
                    type: string
                    example: "Bad credentials"
              - type: object
                properties:
                  error:
                    type: string
                    example: "invalid_request"
                  error_description:
                    type: string
                    example: "Authorization header value must follow this format: Bearer access-token"
                  message:
                    type: string
                    example: "Bad credentials"
    
    Forbidden:
      description: 権限エラー
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "insufficient_permissions"
              error_description:
                type: string
                example: "The access token does not contain the required permissions"
              message:
                type: string
                example: "Permission denied"
    
    ValidationError:
      description: バリデーションエラー
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
                example: ["タイトルを入力してください", "期限日は必須です"]
    
    InternalServerError:
      description: 内部サーバーエラー
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Internal server error"

  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
        accountId:
          type: string
        title:
          type: string
        description:
          type: string
        dueDate:
          type: string
          format: date
        status:
          type: string
          enum: [未着手, 進行中, 完了]
        priority:
          type: string
          enum: [low, medium, high]
        categoryId:
          type: integer
          nullable: true
      required:
        - id
        - title

    TaskUpdate:
      type: object
      properties:
        title:
          type: string
        dueDate:
          type: string
          format: date
        status:
          type: string
          enum: [未着手, 進行中, 完了]
        priority:
          type: string
          enum: [low, medium, high]
        categoryId:
          type: integer
          nullable: true
      required:
        - title

    Category:
      type: object
      properties:
        id:
          type: integer
        accountId:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - accountId
        - name

    CategoryCreate:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
      required:
        - name

    CategoryUpdate:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
      required:
        - name

    # RecurringTask:
    #   type: object
    #   properties:
    #     id:
    #       type: integer
    #     title:
    #       type: string
    #     description:
    #       type: string
    #     category:
    #       type: string
    #     frequency:
    #       type: string
    #       enum: [毎日, 毎週, 毎月]
    #   required:
    #     - id
    #     - title
    #     - frequency

    # HabitStatus:
    #   type: object
    #   properties:
    #     id:
    #       type: integer
    #     taskId:
    #       type: integer
    #     date:
    #       type: string
    #       format: date
    #     status:
    #       type: string
    #       enum: [達成, 未達成]
    #   required:
    #     - id
    #     - taskId
    #     - date
    #     - status

    # Milestone:
    #   type: object
    #   properties:
    #     id:
    #       type: integer
    #     title:
    #       type: string
    #     description:
    #       type: string
    #     dueDate:
    #       type: string
    #       format: date
    #     relatedTasks:
    #       type: array
    #       items:
    #         type: integer
    #   required:
    #     - id
    #     - title
    #     - dueDate

paths:
  # /auth/signin:
  #   post:
  #     tags:
  #       - 認証
  #     summary: ユーザーサインイン
  #     security: []  # 認証不要
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               email:
  #                 type: string
  #                 format: email
  #               password:
  #                 type: string
  #             required:
  #               - email
  #               - password
  #     responses:
  #       '200':
  #         description: サインイン成功
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/User'
  #       '401':
  #         description: 認証エラー

  # /auth/signup:
  #   post:
  #     tags:
  #       - 認証
  #     summary: ユーザーサインアップ
  #     security: []  # 認証不要
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               username:
  #                 type: string
  #               email:
  #                 type: string
  #                 format: email
  #               password:
  #                 type: string
  #             required:
  #               - username
  #               - email
  #               - password
  #     responses:
  #       '201':
  #         description: サインアップ成功
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/User'

  /tasks:
    get:
      tags:
        - タスク
      summary: タスク一覧の取得
      security:
        - Auth0:
            - read:tasks
      responses:
        '200':
          description: タスク一覧の取得に成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - タスク
      summary: 新しいタスクの登録
      security:
        - Auth0:
            - write:tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "タスクが正常に作成されました"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tasks/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - タスク
      summary: 特定のタスクの詳細表示
      security:
        - Auth0:
            - read:tasks
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: タスクが見つからない
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example: ["タスクが見つかりません"]
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - タスク
      summary: タスクの編集
      security:
        - Auth0:
            - write:tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "タスクが正常に更新されました"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: タスクが見つからない
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example: ["タスクが見つかりません"]
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - タスク
      summary: タスクの削除
      security:
        - Auth0:
            - delete:tasks
      responses:
        '204':
          description: 削除成功
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tasks/search:
    get:
      tags:
        - タスク
      summary: タスクの検索
      security:
        - Auth0:
            - read:tasks
      parameters:
        - name: keyword
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # /tasks/{id}/category:
  #   parameters:
  #     - name: id
  #       in: path
  #       required: true
  #       schema:
  #         type: integer
  #   post:
  #     tags:
  #       - カテゴリ管理
  #     summary: タスクのカテゴリを設定/更新
  #     security:
  #       - Auth0: [write:tags]
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               category:
  #                 type: string
  #             required:
  #               - category
  #     responses:
#       '201':
#         description: カテゴリ設定/更新成功
#       '401':
#         $ref: '#/components/responses/Unauthorized'
#       '403':
#         $ref: '#/components/responses/Forbidden'
#       '422':
#         $ref: '#/components/responses/ValidationError'
#       '500':
#         $ref: '#/components/responses/InternalServerError'

  # /tasks/{id}/tags/{tag_name}:
  #   parameters:
  #     - name: id
  #       in: path
  #       required: true
  #       schema:
  #         type: integer
  #     - name: tag_name
  #       in: path
  #       required: true
  #       schema:
  #         type: string
  #   delete:
  #     tags:
  #       - カテゴリ管理
  #     summary: タスクのカテゴリを削除
  #     security:
  #       - Auth0: [write:tags]
  #     responses:
#       '204':
#         description: カテゴリ削除成功
#       '401':
#         $ref: '#/components/responses/Unauthorized'
#       '403':
#         $ref: '#/components/responses/Forbidden'
#       '500':
#         $ref: '#/components/responses/InternalServerError'

  # /tags:
  #   get:
  #     tags:
  #       - カテゴリ管理
  #     summary: 全てのタスクカテゴリの一覧取得
  #     security:
  #       - Auth0: [read:categories]
  #     responses:
#       '200':
#         description: 成功
#       '401':
#         $ref: '#/components/responses/Unauthorized'
#       '403':
#         $ref: '#/components/responses/Forbidden'
#       '500':
#         $ref: '#/components/responses/InternalServerError'
#         content:
#           application/json:
#             schema:
#               type: array
#               items:
#                 $ref: '#/components/schemas/Category'
#       '401':
#         $ref: '#/components/responses/Unauthorized'
#       '403':
#         $ref: '#/components/responses/Forbidden'
#       '500':
#         $ref: '#/components/responses/InternalServerError'

  # /recurring-tasks:
  #   post:
  #     tags:
  #       - 繰り返しタスク
  #     summary: 繰り返しタスクの登録
  #     security:
  #       - Auth0: [write:recurring-tasks]
  #     requestBody:
  #       required: true
  #       content:
#         application/json:
#           schema:
#             $ref: '#/components/schemas/RecurringTask'
#     responses:
#       '201':
#         description: 作成成功
#       '401':
#         $ref: '#/components/responses/Unauthorized'
#       '403':
#         $ref: '#/components/responses/Forbidden'
#       '422':
#         $ref: '#/components/responses/ValidationError'
#       '500':
#         $ref: '#/components/responses/InternalServerError'

  # /recurring-tasks/{id}:
  #   parameters:
  #     - name: id
  #       in: path
  #       required: true
  #       schema:
  #         type: integer
  #   get:
  #     tags:
  #       - 繰り返しタスク
  #     summary: 特定の繰り返しタスクの詳細表示
  #     security:
  #       - Auth0: [read:recurring-tasks]
  #     responses:
  #       '200':
  #         description: 成功
  #   put:
  #     tags:
  #       - 繰り返しタスク
  #     summary: 繰り返しタスクの編集
  #     security:
  #       - Auth0: [write:recurring-tasks]
  #     requestBody:
  #       required: true
  #       content:
#         application/json:
#           schema:
#             $ref: '#/components/schemas/RecurringTask'
#     responses:
#       '200':
#         description: 更新成功
#       '401':
#         $ref: '#/components/responses/Unauthorized'
#       '403':
#         $ref: '#/components/responses/Forbidden'
#       '422':
#         $ref: '#/components/responses/ValidationError'
#       '500':
#         $ref: '#/components/responses/InternalServerError'
  #   delete:
  #     tags:
  #       - 繰り返しタスク
  #     summary: 繰り返しタスクの削除
  #     security:
  #       - Auth0: [delete:recurring-tasks]
  #     responses:
  #       '204':
  #         description: 削除成功

  # /milestones:
  #   post:
  #     tags:
  #       - マイルストーン
  #     summary: マイルストーンの登録
  #     security:
  #       - Auth0: [write:milestones]
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/Milestone'
  #     responses:
  #       '201':
  #         description: 作成成功

  # /milestones/{id}:
  #   parameters:
  #     - name: id
  #       in: path
  #       required: true
  #       schema:
  #         type: integer
  #   get:
  #     tags:
  #       - マイルストーン
  #     summary: 特定のマイルストーンの詳細表示
  #     security:
  #       - Auth0: [read:milestones]
  #     responses:
  #       '200':
  #         description: 成功
  #   put:
  #     tags:
  #       - マイルストーン
  #     summary: マイルストーンの編集
  #     security:
  #       - Auth0: [write:milestones]
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/Milestone'
  #     responses:
  #       '200':
  #         description: 更新成功
  #   delete:
  #     tags:
  #       - マイルストーン
  #     summary: マイルストーンの削除
  #     security:
  #       - Auth0: [delete:milestones]
  #     responses:
  #       '204':
  #         description: 削除成功

  # /milestones/{id}/tasks:
  #   parameters:
  #     - name: id
  #       in: path
  #       required: true
  #       schema:
  #         type: integer
  #   get:
  #     tags:
  #       - マイルストーン
  #     summary: マイルストーンに関連付けられたタスクの一覧取得
  #     security:
  #       - Auth0: [read:milestones]
  #     responses:
  #       '200':
  #         description: 成功
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/Task'

  # /habit-status/{task_id}:
  #   parameters:
  #     - name: task_id
  #       in: path
  #       required: true
  #       schema:
  #         type: integer
  #     - name: period
  #       in: query
  #       required: true
  #       schema:
  #         type: string
  #   get:
  #     tags:
  #       - 習慣化
  #     summary: 習慣化状況の表示
  #     security:
  #       - Auth0: [read:habit-status]
  #     responses:
  #       '200':
  #         description: 成功
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/HabitStatus'
  #   post:
  #     tags:
  #       - 習慣化
  #     summary: 習慣化状況を記録
  #     security:
  #       - Auth0: [write:habit-status]
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/HabitStatus'
  #     responses:
  #       '201':
  #         description: 記録成功

  # /users:
  #   get:
  #     tags:
  #       - ユーザー管理
  #     summary: ユーザーの一覧取得（管理者権限必要）
  #     security:
  #       - Auth0: [read:users]
  #     responses:
  #       '200':
  #         description: 成功
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/User'
  #   post:
  #     tags:
  #       - ユーザー管理
  #     summary: 新しいユーザーの登録（管理者権限必要）
  #     security:
  #       - Auth0: [write:users]
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/User'
  #     responses:
  #       '201':
  #         description: 作成成功

  # /users/{id}:
  #   parameters:
  #     - name: id
  #       in: path
  #       required: true
  #       schema:
  #         type: integer
  #   get:
  #     tags:
  #       - ユーザー管理
  #     summary: 特定のユーザーの詳細表示（管理者権限必要）
  #     security:
  #       - Auth0: [read:users]
  #     responses:
  #       '200':
  #         description: 成功
  #   put:
  #     tags:
  #       - ユーザー管理
  #     summary: ユーザー情報の編集（管理者権限必要）
  #     security:
  #       - Auth0: [write:users]
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/User'
  #     responses:
  #       '200':
  #         description: 更新成功
  #   delete:
  #     tags:
  #       - ユーザー管理
  #     summary: ユーザーの削除（管理者権限必要）
  #     security:
  #       - Auth0: [delete:users]
  #     responses:
  #       '204':
  #         description: 削除成功

  # /tasks/{id}/priority:
  #   parameters:
  #     - name: id
  #       in: path
  #       required: true
  #       schema:
  #         type: integer
  #   put:
  #     tags:
  #       - タスク
  #     summary: タスクの優先度を設定/更新
  #     security:
  #       - Auth0: [write:tasks]
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               priority:
  #                 type: string
  #             required:
  #               - priority
  #     responses:
  #       '200':
  #         description: 更新成功

  /categories:
    get:
      tags:
        - カテゴリ
      summary: カテゴリ一覧の取得
      security:
        - Auth0:
            - read:tasks
      responses:
        '200':
          description: カテゴリ一覧の取得に成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - カテゴリ
      summary: 新しいカテゴリの登録
      security:
        - Auth0:
            - write:tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  $ref: '#/components/schemas/CategoryCreate'
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "カテゴリが正常に作成されました"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /categories/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    put:
      tags:
        - カテゴリ
      summary: カテゴリの編集
      security:
        - Auth0:
            - write:tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  $ref: '#/components/schemas/CategoryUpdate'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "カテゴリが正常に更新されました"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: カテゴリが見つからない
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example: ["カテゴリが見つかりません"]
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - カテゴリ
      summary: カテゴリの削除
      security:
        - Auth0:
            - delete:tasks
      responses:
        '204':
          description: 削除成功
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: カテゴリが見つからない
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example: ["カテゴリが見つかりません"]
        '500':
          $ref: '#/components/responses/InternalServerError'