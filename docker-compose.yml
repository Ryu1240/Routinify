services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: routinify_development
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: bash -c "rm -f /app/tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - ./backend:/app
      - bundle_cache:/usr/local/bundle
    ports:
      - "3000:3000"
    environment:
      - DATABASE_HOST=db
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=password
      - REDIS_URL=redis://redis:6379/0
      - RAILS_ENV=development
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    user: "node"
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3000
    env_file:
      - ./frontend/.env
    depends_on:
      - backend

  swagger-ui:
    image: swaggerapi/swagger-ui:v4.15.5
    ports:
      - "8080:8080"
    environment:
      - SWAGGER_JSON=/app/openapi.yaml
    volumes:
      - ./api/openapi.yaml:/app/openapi.yaml
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:
  bundle_cache:
  frontend_node_modules: 